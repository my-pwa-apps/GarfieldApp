/* Root CSS Variables for theming */
:root {
    --primary-bg: linear-gradient(#eee239, orange);
    --text-color: black;
    --card-bg: linear-gradient(45deg, #eee239 0%, #F09819 51%, #eee239 100%);
    --input-bg: #eee239;
    --button-text-color: black;
    --border-color: black;
    --shadow-color: rgba(0, 0, 0, 0.2);
    --shadow-color-hover: rgba(0, 0, 0, 0.3);
    --checkbox-bg: #eee239;
    --overlay-bg: rgba(255, 255, 255, 0.8);
    --overlay-text: black;
}

/* Dark mode variables */
.dark-theme {
    --primary-bg: linear-gradient(#222, #444);
    --text-color: #eee;
    --card-bg: linear-gradient(45deg, #444 0%, #666 51%, #444 100%);
    --input-bg: #555;
    --button-text-color: #eee;
    --border-color: #888;
    --shadow-color: rgba(0, 0, 0, 0.4);
    --shadow-color-hover: rgba(0, 0, 0, 0.5);
    --checkbox-bg: #555;
    --overlay-bg: rgba(0, 0, 0, 0.7);
    --overlay-text: #eee;
}

/* Apply theming variables to existing elements */
html {
    height: 100%;
    overflow: hidden;
}

body {
    background: var(--primary-bg) no-repeat fixed;
    background-size: 100% 100vh;
    min-height: 100vh;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    color: var(--text-color);
    margin: 0;
    padding: 0;
    overflow: hidden;
    box-sizing: border-box;
    width: 100%;
    transition: background 0.5s ease;
}

main {
    max-width: 900px;
    margin: auto;
    padding: 0.5rem;
    text-align: center;
}

.button {
    margin: 5px;
    padding: 12px;
    text-align: center;
    transition: 0.5s;
    background-size: 200% auto;
    color: var(--button-text-color);
    border-radius: 10px;
    border: none;
    display: block;
    font-weight: 500; /* Changed from 700 to 500 for more subtle appearance */
    font-size: 0.85rem; /* Slightly smaller font size */
    background-image: var(--card-bg);
    cursor: pointer;
    user-select: none;
    touch-action: manipulation;
    box-shadow: 0 4px 10px var(--shadow-color);
    min-width: 70px;
    height: auto;
}

.button:active {
    transform: scale(0.95);
    box-shadow: 0 4px 10px var(--shadow-color);
}

.button:hover {
    background-position: right center;
    color: var(--button-text-color);
    text-decoration: none;
    transform: translateY(-2px);
    box-shadow: 0 6px 12px var(--shadow-color-hover);
}

.button:disabled {
    opacity: 0.5;
    color: var(--button-text-color);
    box-shadow: none;
}

input {
    margin: 5px;
    padding: 10px;
    appearance: none;
    max-width: 100%;
    font-size: 0.75rem;
    box-sizing: border-box;
    text-align: center;
    border-radius: 10px;
    opacity: 0.9;
    background-color: var(--input-bg);
    color: var(--text-color);
    border: 1px solid var(--border-color);
}

.buttongrid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: auto auto;
    text-align: center;
    gap: 5px;
    padding: 0;
    box-sizing: border-box;
    width: 100%;
    margin: 0 auto;
}

.rotate {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) rotate(90deg);
    transform-origin: center center;
    width: auto;
    height: auto;
    max-width: 90vh;
    max-height: 85vw;
    object-fit: contain;
    margin: 0;
    padding: 0;
    z-index: 1000;
    transition: transform 0.3s ease;
    box-shadow: 0 10px 30px var(--shadow-color-hover);
    border-radius: 5px;
}

.normal {
    transform: rotate(0deg);
    width: 100%;
    max-width: 100%;
    height: auto;
    display: block;
    margin: 0 auto;
    transition: all 0.3s ease;
    box-shadow: 0 5px 15px var(--shadow-color);
}

/* Checkbox styling */
input[type="checkbox"], label {
    float: left;
    line-height: 1.6em;
    height: 1.6em;
    margin: 0 2px;
    padding: 0;
    font-size: small;
    color: var(--text-color);
}

input[type=checkbox]:before {
    content: "";
    display: block;
    position: absolute;
    width: 16px;
    height: 16px;
    top: 0;
    left: 0;
    border: 2px solid var(--border-color);
    border-radius: 5px;
    background-color: var(--checkbox-bg);
}

input[type=checkbox]:checked:after {
    content: "";
    display: block;
    width: 5px;
    height: 10px;
    border: solid var(--border-color);
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
    position: absolute;
    top: 2px;
    left: 6px;
}

input[type=checkbox] {
    position: relative;
    cursor: pointer;
    clear: left;
    margin-right: 25px;
    margin-bottom: 20px;
}

#comic {
    transition: opacity 1s ease-in-out;
    opacity: 1;
    border-radius: 5px;
    box-shadow: 0 5px 15px var(--shadow-color);
}

#comic.dissolve {
    opacity: 0;
}

.date-input-container {
    position: relative;
    margin: 5px;
    border-radius: 10px;
    background-image: var(--card-bg);
    background-size: 200% auto;
    box-shadow: 0 4px 10px var(--shadow-color);
    transition: 0.5s;
    overflow: hidden;
}

.date-input-container:hover {
    background-position: right center;
    box-shadow: 0 6px 12px var(--shadow-color-hover);
    transform: translateY(-2px);
}

.date-center-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
}

input[type="date"] {
    width: auto;
    height: 42px;
    margin: 0;
    padding: 0;
    font-size: 0.85rem;
    font-weight: 500;
    background: transparent;
    border: none;
    color: var(--text-color);
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    text-align: center;
}

/* Remove default calendar icon but keep functionality */
input[type="date"]::-webkit-calendar-picker-indicator {
    opacity: 0;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    cursor: pointer;
}

/* Specific center text */
input[type="date"]::-webkit-datetime-edit {
    width: 100%;
    text-align: center;
}

/* Use a simpler approach for mobile */
@media (max-width: 768px) {
    input[type="date"] {
        opacity: 0; /* Hide the visual input */
    }
    
    .date-center-wrapper {
        position: relative;
    }
    
    /* Add a visible date display that matches the styling */
    .date-center-wrapper::before {
        content: attr(data-display-date);
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.85rem;
        font-weight: 500;
        pointer-events: none;
    }
}

.logo {
    width: 100%;
    box-sizing: border-box;
    text-align: center;
    padding: 0;
    margin: 0 auto;
}

.logo img {
    max-width: 95%;
    margin: 25px auto 5px;
    display: block;
}

#comic-container {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    margin: 0 auto;
    padding: 0;
    box-sizing: border-box;
    position: relative;
    overflow: hidden;
    transition: background 0.5s ease;
}

#comic-container.fullscreen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: var(--primary-bg) no-repeat fixed;
    z-index: 999;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
}

#comic-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    transition: all 0.3s ease;
}

#comic-container.fullscreen #comic-wrapper {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

#settingsDIV {
    margin-top: 25px;
    padding: 0 8px;
}

.hidden-during-fullscreen {
    display: none !important;
}

#exit-fullscreen {
    position: fixed;
    top: 10px;
    right: 10px;
    z-index: 1100;
}

#controls-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    box-sizing: border-box;
    padding: 0 10px;
}

#support-container {
    flex: 1;
}

#action-buttons {
    display: flex;
    align-items: center;
}

.action-icon {
    width: 30px;
    margin-right: 20px;
    cursor: pointer;
    transition: filter 0.3s ease;
}

.action-icon:last-child {
    margin-right: 0;
}

.kofi-button-styled {
    position: relative;
    top: 2px;
    margin-left: 3px;
}

.vertical {
    max-height: 300px;
    width: auto;
    margin: 0 auto;
    cursor: pointer;
    transition: all 0.3s ease;
    display: block;
}

.thumbnail-container {
    position: relative;
    display: inline-block;
    margin: 0 auto;
}

.thumbnail-notice {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: rgba(238, 226, 57, 0.8);
    color: black;
    padding: 8px;
    font-size: 0.85rem;
    font-weight: 500;
    text-align: center;
    border-radius: 0 0 10px 10px;
}

.fullscreen-vertical {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: auto;
    height: auto;
    max-width: 95vw;
    max-height: 90vh;
    object-fit: contain;
    margin: 0;
    padding: 0;
    z-index: 1000;
    box-shadow: 0 10px 30px var(--shadow-color-hover);
    border-radius: 5px;
}

/* Dark mode toggle indicator */
#darkmode:checked + label:after {
    content: " (on)";
}

#darkmode:not(:checked) + label:after {
    content: " (off)";
}